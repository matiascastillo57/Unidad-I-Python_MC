# Generated by Django 4.2.24 on 2025-09-04 15:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', help_text='Estado del registro', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Fecha de eliminación (soft delete)', null=True)),
                ('name', models.CharField(help_text='Nombre de la categoría', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descripción de la categoría')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', help_text='Estado del registro', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Fecha de eliminación (soft delete)', null=True)),
                ('name', models.CharField(help_text='Nombre del dispositivo', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del dispositivo')),
                ('max_consumption', models.DecimalField(decimal_places=2, help_text='Consumo máximo permitido (kW)', max_digits=10)),
                ('category', models.ForeignKey(help_text='Categoría del dispositivo', on_delete=django.db.models.deletion.CASCADE, to='monitoring.category')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', help_text='Estado del registro', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Fecha de eliminación (soft delete)', null=True)),
                ('name', models.CharField(help_text='Nombre de la empresa', max_length=200)),
                ('email', models.EmailField(help_text='Correo electrónico de contacto', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Teléfono', max_length=20)),
                ('address', models.TextField(blank=True, help_text='Dirección de la empresa')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', help_text='Estado del registro', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Fecha de eliminación (soft delete)', null=True)),
                ('name', models.CharField(help_text='Nombre de la zona', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descripción de la zona')),
                ('organization', models.ForeignKey(help_text='Empresa propietaria', on_delete=django.db.models.deletion.CASCADE, to='monitoring.organization')),
            ],
            options={
                'verbose_name': 'Zone',
                'verbose_name_plural': 'Zones',
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', help_text='Estado del registro', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Fecha de eliminación (soft delete)', null=True)),
                ('consumption_value', models.DecimalField(decimal_places=2, help_text='Valor de consumo medido (kW)', max_digits=10)),
                ('measurement_date', models.DateTimeField(help_text='Fecha y hora de la medición')),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales')),
                ('device', models.ForeignKey(help_text='Dispositivo medido', on_delete=django.db.models.deletion.CASCADE, to='monitoring.device')),
                ('organization', models.ForeignKey(help_text='Empresa propietaria', on_delete=django.db.models.deletion.CASCADE, to='monitoring.organization')),
            ],
            options={
                'verbose_name': 'Measurement',
                'verbose_name_plural': 'Measurements',
                'ordering': ['-measurement_date'],
            },
        ),
        migrations.AddField(
            model_name='device',
            name='organization',
            field=models.ForeignKey(help_text='Empresa propietaria', on_delete=django.db.models.deletion.CASCADE, to='monitoring.organization'),
        ),
        migrations.AddField(
            model_name='device',
            name='zone',
            field=models.ForeignKey(help_text='Zona donde está ubicado', on_delete=django.db.models.deletion.CASCADE, to='monitoring.zone'),
        ),
        migrations.AddField(
            model_name='category',
            name='organization',
            field=models.ForeignKey(help_text='Empresa propietaria', on_delete=django.db.models.deletion.CASCADE, to='monitoring.organization'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', help_text='Estado del registro', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Fecha de eliminación (soft delete)', null=True)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], help_text='Nivel de severidad', max_length=10)),
                ('message', models.TextField(help_text='Mensaje descriptivo de la alerta')),
                ('is_resolved', models.BooleanField(default=False, help_text='¿La alerta fue resuelta?')),
                ('device', models.ForeignKey(help_text='Dispositivo que generó la alerta', on_delete=django.db.models.deletion.CASCADE, to='monitoring.device')),
                ('measurement', models.ForeignKey(help_text='Medición que generó la alerta', on_delete=django.db.models.deletion.CASCADE, to='monitoring.measurement')),
                ('organization', models.ForeignKey(help_text='Empresa propietaria', on_delete=django.db.models.deletion.CASCADE, to='monitoring.organization')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'ordering': ['-created_at'],
            },
        ),
    ]
